import React, { useState } from "react";
import Head from "next/head";
import styles from "@/styles/Home.module.css";
import InputField from "@/components/InputField";

export default function Home() {
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const [submitting, setSubmitting] = useState(false);
  const [usernameHasError, setUsernameHasError] = useState(false);
  const [passwordHasError, setPasswordHasError] = useState(false);

  const handleSubmit = (event) => {
    event.preventDefault(); // prevent form from submitting

    // validate the form
    if (username === "") {
      setUsernameHasError(true);
      return;
    } else {
      setUsernameHasError(false);
    }

    if (password === "") {
      setPasswordHasError(true);
      return;
    } else {
      setPasswordHasError(false);
    }

    // set submitting state to true and update submit button text
    setSubmitting(true);

    // simulate a delay to demonstrate the change in button text
    setTimeout(() => {
      alert("Form submitted successfully!");
      setSubmitting(false); // reset submitting state and button text
    }, 2000);
  };
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <div>
            <form className="form" onSubmit={handleSubmit}>
              <div>
                <label htmlFor="username">Username:</label>
                <input
                  type="text"
                  id="username"
                  className={styles.input}
                  name="username"
                  value={username}
                  onChange={(event) => setUsername(event.target.value)}
                />
                {usernameHasError ? (
                  <span className={styles.error}>This is required</span>
                ) : null}
              </div>
              {/* <InputField
                label="Username"
                name="username"
                value={username}
                onChange={(event) => setUsername(event.target.value)}
                hasError={usernameHasError}
              /> */}

              <div>
                <label htmlFor="password">Password:</label>
                <input
                  type="password"
                  id="password"
                  className={styles.input}
                  name="password"
                  value={password}
                  onChange={(event) => setPassword(event.target.value)}
                />
                {passwordHasError ? (
                  <span className={styles.error}>This is required</span>
                ) : null}
              </div>

              <input
                type="submit"
                className={styles.submit}
                value={submitting ? "Please wait..." : "Submit"}
                disabled={submitting}
              />
            </form>
          </div>
        </div>
      </main>
    </>
  );
}
